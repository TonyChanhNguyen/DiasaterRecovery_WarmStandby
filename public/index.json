[
{
	"uri": "/3.failover/3.1.aurora/",
	"title": "Aurora",
	"tags": [],
	"description": "",
	"content": "Amazon Aurora Global Database is designed for globally distributed applications, allowing a single Amazon Aurora database to span multiple AWS regions. It replicates your data with no impact on database performance, enables fast local reads with low latency in each region, and provides disaster recovery from region-wide outages. In disaster recovery situations, you can promote a secondary region to take full read-write responsibilities in under a minute.\nWith an Aurora global database, there are two different approaches to failover depending on the scenario.\nFailover – Use this approach to recover from an unplanned outage. With this approach, you perform a cross-Region failover to one of the secondary DB clusters in your Aurora global database. The RPO for this approach is typically a non-zero value measured in seconds. The amount of data loss depends on the Aurora global database replication lag across the AWS Regions at the time of the failure.\nSwitchover – This operation was previously called \u0026ldquo;managed planned failover\u0026rdquo;. Use this approach for controlled scenarios, such as operational maintenance and other planned operational procedures. Because this feature synchronizes secondary DB clusters with the primary before making any other changes, RPO is 0 (no data loss).\nFailover, is showcased in Pilot Light workshop.\nFor this workshop we will be doing a Switchover.\n  Go to RDS in Oregon (us-west-2) region.\n  Look at the warm-global Global database. Notice how you have warm-primary a Primary cluster in us-east-1 which has your Writer instance and warm-secondary a Secondary cluster in us-west-1 which has your Reader instance.   Select warm-global cluster.\n  Click on Actions.\n  Choose Switch over or fail over global database under Actions.   Choose Switchover.\n  At New primary cluster feature, select warm-secondary.\n  Then, click on Confirm.   It will take you several minutes to promote Secondary database to Primary.   When the switchover is complete, notice the changes. The Primary cluster is now in us-west-2 which has our Writer instance and the Secondary Cluster is now in us-east-1 which has our Reader instance.   "
},
{
	"uri": "/1.introduce/",
	"title": "Introduce",
	"tags": [],
	"description": "",
	"content": "Overview In this module, you will go through the Warm Standby disaster recovery strategy. Warm Standby disaster recovery strategy has Recovery Point Objective(RPO) / Recovery Time Objective (RTO) within minutes. For the warm Standby strategy secondary region, the data is live and core infrastructure is provisioned and the services are running at a reduced capacity.\nYour application is currently deployed in the primary region N. Virginia (us-east-1). Oregon (us-west-2) will be your secondary.\nYour test application is Unishop. It is a Spring Boot Java application deployed on a single Amazon Elastic Compute Cloud (EC2) instance using a public subnet. Your datastore is an Amazon Aurora MySQL database with a frontend written using bootstrap and hosted in Amazon Simple Storage Service (S3).\nThis module takes advantage of Auto Scaling Groups (ASG) which will allow us to scale out in the secondary region compute instances during failover. Amazon Aurora Global Database is used to replicate your Amazon Aurora MySQL data to the secondary region. You are also taking advantage of Amazon Aurora read replica write forwarding . With this feature enabled, writes can be sent to a read replica in a secondary region, and will be seamlessly forwarded to the writer in the primary region over a secure communication channel.\nCloudFormation will be used to configure the infrastructure and deploy the application. Provisioning your infrastructure with infrastructure as code (IaC) methodologies is a best practice. CloudFormation is an easy way to speed up cloud provisioning with infrastructure as code.\nContent  Introduce Preparation  2.1 S3 access 2.2 Primary region 2.3 Secondary region 2.4 Verify website   Failover  3.1 Aurora 3.2 EC2 3.3 Verify failover   Cleanup resources  "
},
{
	"uri": "/2.preparation/2.1.s3access/",
	"title": "S3 access ",
	"tags": [],
	"description": "",
	"content": "Your application employs AWS Simple Storage Service (S3) Static website hosting. To make the application available to Internet users, you must disable the AWS account policy that blocks public access.\n Click S3 to navigate to the dashboard. Select feature Block Public Access settings for this account.  If you see that Block public access is On, click on Edit button.  If you see that Block public access is Off, you can skip this step and to go Primary region.\n\r Uncheck Block all public access.\n  Then, click on save changes.   Input confirm, then click on Confirm to save your changes.   Your changes had been updated successfully.   "
},
{
	"uri": "/",
	"title": "Warm Standby",
	"tags": [],
	"description": "",
	"content": "Warm Standby In this module, you will go through the Warm Standby disaster recovery strategy. Warm Standby disaster recovery strategy has Recovery Point Objective(RPO) / Recovery Time Objective (RTO) within minutes. For the warm Standby strategy secondary region, the data is live and core infrastructure is provisioned and the services are running at a reduced capacity.\nYour application is currently deployed in the primary region N. Virginia (us-east-1). Oregon (us-west-2) will be your secondary.\nYour test application is Unishop. It is a Spring Boot Java application deployed on a single Amazon Elastic Compute Cloud (EC2) instance using a public subnet. Your datastore is an Amazon Aurora MySQL database with a frontend written using bootstrap and hosted in Amazon Simple Storage Service (S3).\nThis module takes advantage of Auto Scaling Groups (ASG) which will allow us to scale out in the secondary region compute instances during failover. Amazon Aurora Global Database is used to replicate your Amazon Aurora MySQL data to the secondary region. You are also taking advantage of Amazon Aurora read replica write forwarding. With this feature enabled, writes can be sent to a read replica in a secondary region, and will be seamlessly forwarded to the writer in the primary region over a secure communication channel.\nCloudFormation will be used to configure the infrastructure and deploy the application. Provisioning your infrastructure with infrastructure as code (IaC) methodologies is a best practice. CloudFormation is an easy way to speed up cloud provisioning with infrastructure as code.\n"
},
{
	"uri": "/3.failover/3.2.ec2/",
	"title": "EC2",
	"tags": [],
	"description": "",
	"content": "Update Launch Configuration and Auto Scaling Group (ASG)   Click CloudFormation Stacks to navigate to the dashboard in the Oregon (us-west-2) region.\n  Select stack name warm-secondary.\n  Then, click on Update.   At Update stack interface, click on Next.   At Specify stack details interface, select yes as IsPromote.\n  Then, click on Next.   At Configure stack options interface, scroll down and click on Next.   At Review warm-secondary interface, scroll down at the end of page. Check I acknowledge that AWS CloudFormation might create IAM resources with custom names. box.\n  Then, click on Submit.   Your stack is updating. It will take you about 5 minutes to complete.   After 5 minutes, your stack is updated successfully.   Auto Scaling Group (ASG) The following changes were made when you updated your CloudFormation template:\n Launch Configuration was modified in order to connect your application to the newly promoted Aurora cluster. Auto Scaling Group was modified in order to scale out your EC2 capacity from 1 instance to 2 instances to match your primary region N. Virginia (us-east-1) EC2 capacity. We can now be confident that when we failover, our secondary region Oregon (us-west-2) can handle production level request traffic.    Go to Auto Scaling Groups at region Oregon (us-west-2).\n  Click on ASG name warm-secondary-WebServerGroup-XXXXXXXXXXXX.   Click on tab Activity.   At Activity history feature, verify that there is an scale out activity your EC2 capacity from 1 instance to 2 instances.   "
},
{
	"uri": "/2.preparation/",
	"title": "Preparation ",
	"tags": [],
	"description": "",
	"content": "Content  S3 access Primary region Secondary region Verify website  "
},
{
	"uri": "/2.preparation/2.2.primaryregion/",
	"title": "Primary region",
	"tags": [],
	"description": "",
	"content": "Deploy Network Configuration using Amazon CloudFormation Templates   Create Network Infrastructure in primary region N. Virginia (us-east-1) by launching this CloudFormation Template.\n  At CloudFormation interface, click on Next.   At Specify stack details interface, input stack name network-stack.\n  Then, click on Next.   At Configure stack options interface. Scroll down and click on Next.   At Review network-stack interface. Scroll down and click on Submit.   Your network stack is creating.   After a minute, your stack will be created successfully.   Deploy Application Download template source to deploy application here\n Go to CloudFormation Stacks in primary region N. Virginia (us-east-1) At CloudFormation interface, click on Create Stack. Then click on With new resources (standard).  At Create stack interface, choose Template is ready as Prepare template. Select Upload a template file as Specify template. Click on Choose file and select WarmStandby_App.yml file you had downloaded above. Then, click on Next.  At Specify stack details interface, input stack name warm-primary. Keep yes at IsPrimary parameter. Keep no at IsPromote parameter. Keep /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2 at LatestAmiId parameter. Keep network-stack at NetworkStackName parameter unless you\u0026rsquo;ve changed it in the previous step. Then, click on Next.  At Configure stack options interface, scroll down and click on Next.  At Review warm-primary interface, scroll down to the end of page. Check at box I acknowledge that AWS CloudFormation might create IAM resources with custom names. Then, click on Submit.  Your application stack is creating. It will take you about 15 minutes to finish.  After about 15 minutes, your stack had been created successfully.  "
},
{
	"uri": "/3.failover/",
	"title": "Failover",
	"tags": [],
	"description": "",
	"content": "When a regional service event affects the Unishop application in the primary region N. Virginia (us-east-1), we want to fail over to the secondary region Oregon (us-west-2).\nSimulating a Regional Service Event You will now simulate a regional service event affecting the Unishop website in N. Virginia (us-east-1). You are going to achieve this by blocking public access to the S3 bucket that is hosting the website making the Unishop website unavailable.\n  Go to S3.\n  Click on the bucket name warm-primary-uibucket-xxxxxxxxxxxx.   Click on Permissions tab.   In the Block public access (bucket settings) section, click on Edit.   Enable the Block all public access checkbox.\n  Then click the Save changes button.   Input confirm.\n  Click on Confirm to save your changes.   Click on Properties tab.   Scroll down to the Static website hosting section. Click on the Bucket website endpoint link.   You should get a 403 Forbidden error.   "
},
{
	"uri": "/2.preparation/2.3.secondaryregion/",
	"title": "Secondary region",
	"tags": [],
	"description": "",
	"content": "Deploy Network Configuration using Amazon CloudFormation Templates   Create Network Infrastructure in secondary region Oregon (us-west-2) by launching this CloudFormation Template.\n  At CloudFormation interface, click on Next.   At Specify stack details interface, input stack name network-stack.\n  Then, click on Next.   At Configure stack options interface. Scroll down and click on Next.   At Review network-stack interface. Scroll down and click on Submit.   Your network stack is creating.   After a minute, your stack will be created successfully.   Deploy Application  Go to CloudFormation Stacks in secondary region Oregon (us-west-2). At CloudFormation interface, click on Create Stack. Then click on With new resources (standard).  At Create stack interface, choose Template is ready as Prepare template. Select Upload a template file as Specify template. Click on Choose file and select WarmStandby_App.yml file you had downloaded above. Then, click on Next.  At Specify stack details interface, input stack name warm-secondary. Change to no at IsPrimary parameter. Keep no at IsPromote parameter. Keep /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2 at LatestAmiId parameter. Keep network-stack at NetworkStackName parameter unless you\u0026rsquo;ve changed it in the previous step. Then, click on Next.  At Configure stack options interface, scroll down and click on Next.   At Review warm-secondary interface, scroll down to the end of page.\n  Check at box I acknowledge that AWS CloudFormation might create IAM resources with custom names.\n  Then, click on Submit.   Your application stack is creating. It will take you about 15 minutes to finish.\n  After about 15 minutes, your stack had been created successfully.  "
},
{
	"uri": "/3.failover/3.3.verifyfailover/",
	"title": "Verify failover",
	"tags": [],
	"description": "",
	"content": "  Go to CloudFormation Stacks in the Oregon (us-west-2) region.\n  Click on stack name warm-secondary.\n  Click on Outputs tab.\n  Click on WebsiteURL link.   It will be logged in automatically. After that, click on Cart shop to see the quantity if your Cart now is 0.   All of items that you added before will appear.   After closing Cart page, you will see the quantity of Cart shop now is same as before.   Congratulations, your website had been done failover to Secondary Region Oregon (us-west-2) from Primary Region N. Virginia (us-east-1) successfully. "
},
{
	"uri": "/4.cleanupresources/",
	"title": "Cleanup resources",
	"tags": [],
	"description": "",
	"content": "S3 Cleanup   Go to S3.\n  Select the warm-primary-uibucket-xxxx.\n  Click Empty.   Input permanently delete.\n  Then, click on Empty.   Repeat those step for bucket name warm-secondary-uibucket-xxxx also.\n  Database Cleanup Primary region   Go to RDS in N. Virginia (us-east-1) region.\n  Select unishop-warm database under warm-primary cluster.\n  Click on Action.\n  Then click on Delete.   Enter delete me.\n  Click on Delete.   After unishop-warm database was deleted, select warm-primary cluster.\n  Click on Actions.\n  Click on Remove from global database.   Click Remove and promote.   After remove from global database, select warm-primary cluster.\n  Click on Actions.\n  Click on Delete.   Uncheck Create final snapshot box.\n  Check I acknowledge that upon instance\u0026hellip; box.\n  Input delete me.\n  Then, click on Delete DB sluster.   Secondary region  Go to RDS in Oregon (us-west-2) region. Repeat all above steps to delete unishop-warm database first, then delete warm-secondary cluster.  After databases and clusters were deleted, now we will delete Global database.\n Select warm-global.\n  Click on Actions.\n  Click on Delete.   Input delete me.\n  Click on Delete.   CloudFormation Secondary Region Cleanup   Go to CloudFormation stacks in the Oregon (us-west-2) region.\n  Select stack name warm-secondary.\n  Then click on Delete.   Click on Delete to confirm.   After stack warm-secondary was deleted, select stack name network-stack.\n  Then click on Delete.   Click on Delete to confirm.   CloudFormation Primary Region Cleanup   Go to CloudFormation stacks in the N. Virginia (us-east-1) region.\n  Repeat these steps to delete stack name warm-primary first, then delete stack name network-stack.\n  S3 bucket Cleanup   Go to S3.\n  Select bucket name cf-templates-xxxxxxxxxxxxx-us-east-1.\n  Click on Empty.   Input permanently delete.\n  Then, click on Empty.   Select bucket name cf-templates-xxxxxxxxxxxxx-us-east-1 again.\n  Click on Delete.\n   Input its bucket name.\n  Click on Delete bucket.   Repeat those steps with bucket name cf-templates-xxxxxxxxxxxxx-us-west-2.\n  Congratulations, you had finished this workshop! "
},
{
	"uri": "/2.preparation/2.4.verifywebsite/",
	"title": "Verify website",
	"tags": [],
	"description": "",
	"content": "Primary Region   Click CloudFormation Stacks to navigate to the dashboard in N. Virginia (us-east-1) region.\n  Choose the warm-primary stack.\n  Click the Output link.   Click on the WebsiteURL output link and open in a new browser tab or window.   At web page, click on Sign up to register account.   Fill needed information to sign up account.\n  Then, click on Signup to finish this step.\n  \rKeep remember information which you provided for this step.\n\r Click on Log in.   Fill information which you provided.\n  Then, click on Login.   After log in successfully, click to Unicorn item you want. Then click on Add to cart to add it into your cart.   After you add Unicorn item to cart successfully, check Cart icon to see the quantity was increased.   Repeat step 12 to add more items to your cart.   After finish those steps. Save the quantity of your cart and its region. We will verify them again after performing replicate website into secondary region.\n  \rIn my situation, the quantity of cart is 4 and region is us-east-1 (Primary region).\n\rSecondary Region You are taking advantage of Amazon Aurora read replica write forwarding . With this feature enabled, writes can be sent to a read replica in a secondary region, and will be seamlessly forwarded to the writer in the primary region over a secure communication channel. It is considered a best practice to enable write forwarding in your secondary region for Warm Standby disaster recovery strategy for testing purposes.\n  Go to CloudFormation Stacks in region Oregon (us-west-2).\n  Choose the warm-secondary stack.\n  Click the Outputs link.   Click on the WebsiteURL output link and open in a new browser tab or window.   At web page you can see the region now is us-west-2, then click on Log in.   Fill need information that you created at Primary region N. Virginia (us-east-1).\n  Click on Log in.   You should see the same number of items in your cart that you added at Primary region N. Virginia (us-east-1).   Lets add more items to the cart.   At this time, the quantity of cart is 6 and region is us-west-2 (Secondary region).\n\rBack to web page of Primary region N. Virginia (us-east-1) and see the cart. The quantity of cart now is 6, same as at Secondary region Oregon (us-west-2).   "
},
{
	"uri": "/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]